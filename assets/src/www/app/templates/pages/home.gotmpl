{{define "home.contents"}}
	<div class="info-block">
		<h3>Go Kart</h3>
		<p>Combination of tools which will make developing webapps using go easier.  The gokart gem by default combines SASS, Javascript, Coffee Script, Rake, and Sprokets with Go to provide a great development environment.  This environment supports test driven development (TDD) with ruby guard and jasmine.</p>
		<p>There are no external dependencies other than Go and ruby (which I expect you already have...).  All dependencies are installed via bundler after the project directory is created.</p>
	</div>
	<div class="info-block">
		<h3>Usage</h3>
		<p>With ruby (1.9.1 min maybe?) all you need to do is:</p>
		<p class="code">gem install gokart</p>
		<p>Once installed to create a new go + sprockets environment:</p>
		<p class="code">gokart APP_NAME</p>
		<p>This utility/framework depends on the github.com/jasondelponte/go-utils to run out of the box, but if you choose it would be simple to remove and place with utilities of your choice.<p>
		<p>There are several rake commands you can use to build/run/deploy the environment. Checkout rake --tasks for a list of them.  In general you'll probably only ever need the app:x commands not app:server:x or app:www:x.</p>
	</div>
	<div class="info-block">
		<h4>Environment Structure</h4>
		<p>The environment is split into the following sections:</p>
		<ul>
			<li><strong>bin/</strong> - This is where the application will run from once built, and where all the assets will be compiled to.</li>
			<li><strong>bin/server/</strong> - Compiled Go http server.</li>
			<li><strong>bin/assets/templates/</strong> - Compiled Go HTML templates</li>
			<li><strong>bin/assets/www-min/</strong> - Compiled and minified CSS/JS/images using sprockets</li>
			<li><strong>bin/assets/www-debug/</strong> - Compiled, but non-minified/concatenated CSS/JS source, images are here also</li>
			<li><strong>lib/</strong> - Where any Go libraries your app depends on will be installed by running 'go get'.  Note: You'll need to set the project into your GOPATH, I haven't figured out a good solution for this yet.</li>
			<li><strong>spec/javascripts/</strong> - Where all of the compiled JS specs will be written to, and run from. Note: Currently these do not go through sprockets, but only the coffee-script compiler. So no preprocessing is available</li>
			<li><strong>spec/javascripts/support</strong> - Configuration files for Jasmine. jasmin.yml contains the script specifying the source files to load, and what order to load them in.</li>
			<li><strong>src/server/</strong> - All of your Go code will go here following the normal Go 1.0 directory pattern</li>
			<li><strong>src/www/app/</strong> - All of you Coffee script, sass, and Go Template are found here</li>
			<li><strong>src/www/spec/</strong> - All coffee script spec files which will be compiled into js and run using jasmine.</li>
			<li><strong>src/www/vendor/</strong> - js/css/image files for third party tools and libraries</li>
			<li><strong>tasks/</strong> - Rake tasks to build, run, and test the application.  There are several tasks which you can run do 'rake --tasks' to see a complete list of them. 'rake app:test' to run test units, 'rake app:start' to build and run, use startdebug for a debug build.  Note: when you do 'rake jasmine' or rake 'app:guard' you probably want to start these tasks in different tabs because they run until killed.</li>
		</ul>
	</div>

    <script type="text/javascript">
        var HomePage = require('pages/home');
    </script>

{{end}}

{{define "home"}}
	{{template "base.header" .Common}}
	{{template "home.contents" .Contents}}
	{{template "base.footer"}}
{{end}}